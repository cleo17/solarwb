2025-05-26 21:33:15,882 - semgrep.run_scan - DEBUG - semgrep version 1.2.0
2025-05-26 21:33:15,888 - semgrep.git - DEBUG - Failed to get project url from 'git ls-remote': Command failed with exit code: 128
-----
Command failed with output:
fatal: No remote configured to list refs from.


Failed to run 'git ls-remote --get-url'. Possible reasons:

- the git binary is not available
- the current working directory is not a git repository
- the baseline commit is not a parent of the current commit
    (if you are running through semgrep-app, check if you are setting `SEMGREP_BRANCH` or `SEMGREP_BASELINE_COMMIT` properly)
- the current working directory is not marked as safe
    (fix with `git config --global --add safe.directory $(pwd)`)

Try running the command yourself to debug the issue.
2025-05-26 21:33:15,889 - semgrep.config_resolver - DEBUG - Loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-05-26 21:33:15,899 - semgrep.config_resolver - DEBUG - Done loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-05-26 21:33:15,902 - semgrep.config_resolver - DEBUG - Saving rules to /tmp/semgrep-vue_7f1o.rules
2025-05-26 21:33:16,068 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEIuf0ZHK/semgrep/bin/semgrep-core-proprietary'.
2025-05-26 21:33:16,592 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-05-26 21:33:16,592 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-05-26 21:33:16,592 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-05-26 21:33:16,593 - semgrep.config_resolver - DEBUG - loaded 1 configs in 0.7040183544158936
2025-05-26 21:33:16,800 - semgrep.run_scan - VERBOSE - running 711 rules from 1 config /home/runner/workspace/.config/.semgrep/semgrep_rules.json_0
2025-05-26 21:33:16,800 - semgrep.run_scan - VERBOSE - No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev/docs/cli-usage/#ignore-files
2025-05-26 21:33:16,801 - semgrep.run_scan - VERBOSE - Rules:
2025-05-26 21:33:16,802 - semgrep.run_scan - VERBOSE - <SKIPPED DATA (too many entries; use --max-log-list-entries)>
2025-05-26 21:33:17,763 - semgrep.core_runner - DEBUG - Passing whole rules directly to semgrep_core
2025-05-26 21:33:18,280 - semgrep.core_runner - DEBUG - Running Semgrep engine with command:
2025-05-26 21:33:18,281 - semgrep.core_runner - DEBUG - /tmp/_MEIuf0ZHK/semgrep/bin/opengrep-core -json -rules /tmp/tmpjawkvbji.json -j 8 -targets /tmp/tmpczoh7bz8 -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
2025-05-26 21:33:53,130 - semgrep.core_runner - DEBUG - --- semgrep-core stderr ---
[00.13][[34mINFO[0m]: Executed as: /tmp/_MEIuf0ZHK/semgrep/bin/opengrep-core -json -rules /tmp/tmpjawkvbji.json -j 8 -targets /tmp/tmpczoh7bz8 -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
[00.13][[34mINFO[0m]: Version: 1.2.0
[00.13][[34mINFO[0m]: Parsing rules in /tmp/tmpjawkvbji.json
[00.96][[34mINFO[0m]: scan: processing 351 files (skipping 0), with 454 rules (skipping 0 )
[17.72][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: client/src/pages/auth-page.tsx func: AuthPage:28113]
[0m[18.21][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.sqli.node-postgres-sqli file: client/src/pages/admin/products.tsx func: AdminProducts:35853]
[0m[20.89][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: client/src/pages/product-detail-page.tsx func: ProductDetailPage:37132]
[0m[20.91][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.express-insecure-template-usage file: client/src/pages/auth-page.tsx func: AuthPage:28113]
[0m[21.40][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: client/src/pages/admin/products.tsx func: AdminProducts:35853]
[0m[23.29][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: client/src/pages/admin/products.tsx func: AdminProducts:35853]
[0m[25.20][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: client/src/pages/admin/orders.tsx func: AdminOrders:45461]
[0m[25.22][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: client/src/pages/admin/products.tsx func: AdminProducts:35853]
[0m[25.51][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: client/src/pages/admin/blog-posts.tsx func: AdminBlogPosts:53126]
[0m[27.49][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal file: client/src/pages/checkout-page.tsx func: CheckoutPage:57743]
[0m[30.73][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: client/src/pages/checkout-page.tsx func: CheckoutPage:57743]
[0m[31.19][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.audit.res-render-injection file: client/src/pages/checkout-page.tsx func: CheckoutPage:57743]
[0m[33.70][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.express-insecure-template-usage file: client/src/pages/checkout-page.tsx func: CheckoutPage:57743]
[0m[34.74][[34mINFO[0m]: Custom ignore pattern: None
[34.74][[34mINFO[0m]: Custom ignore pattern: None
--- end semgrep-core stderr ---
2025-05-26 21:33:53,136 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/auth.ts'), 'config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection') match_id = 40ac195d327d6e4f128a59d5db9fd734c110472b58d316907a65b78d0d141f18e6690366998977db8aba097ca5391305ec46e9d8992d87eff2550831f5d8741b_0
2025-05-26 21:33:53,137 - semgrep.rule_match - DEBUG - match_key = ('"..." + updates[field as keyof SelectUser]=req.body[field]\n updates[field as keyof SelectUser]=req.body[field] updates[field as keyof SelectUser]=req.body[field] + "..."\n updates["..."] = ... updates[...] = "..." updates[...] = ... app.put(..., function $FUNC(req, res) {...}) app.put(..., function $FUNC(req, res, next) {...}) put ^(get|post|put|head|delete|options)$ function ... (req, res) {...} function ... (req, res, next) {...} req.body req.cookies req.headers req.params req.query req ({ req }: Request,res: Response) => {...}\n ({ req }: Request,res: Response, next: NextFunction) =>\n{...}\n body cookies headers params query', PosixPath('server/auth.ts'), 'config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection') match_id = 14174fd4eb787c069cfa2038736c576b444e518b8291eaa9d89b22085353e1167285204506cd57b2ad9c17156d958edd30cbc3f2f0a3284419c4845182c5ab8c_0
2025-05-26 21:33:53,138 - semgrep.rule_match - DEBUG - match_key = ('"..." + updates[field as keyof SelectUser]=req.body[field]\n updates[field as keyof SelectUser]=req.body[field] updates[field as keyof SelectUser]=req.body[field] + "..."\n updates["..."] = ... updates[...] = "..." updates[...] = ... app.put(..., function $FUNC(req, res) {...}) app.put(..., function $FUNC(req, res, next) {...}) put ^(get|post|put|head|delete|options)$ function ... (req, res) {...} function ... (req, res, next) {...} req.body req.cookies req.headers req.params req.query req ({ req }: Request,res: Response) => {...}\n ({ req }: Request,res: Response, next: NextFunction) =>\n{...}\n body cookies headers params query', PosixPath('server/auth.ts'), 'config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection') match_id = 14174fd4eb787c069cfa2038736c576b444e518b8291eaa9d89b22085353e1167285204506cd57b2ad9c17156d958edd30cbc3f2f0a3284419c4845182c5ab8c_0
2025-05-26 21:33:53,139 - semgrep.rule_match - DEBUG - match_key = ('"..." + updates[field as keyof SelectUser]=req.body[field]\n updates[field as keyof SelectUser]=req.body[field] updates[field as keyof SelectUser]=req.body[field] + "..."\n updates["..."] = ... updates[...] = "..." updates[...] = ... app.put(..., function $FUNC(req, res) {...}) app.put(..., function $FUNC(req, res, next) {...}) put ^(get|post|put|head|delete|options)$ function ... (req, res) {...} function ... (req, res, next) {...} req.body req.cookies req.headers req.params req.query req ({ req }: Request,res: Response) => {...}\n ({ req }: Request,res: Response, next: NextFunction) =>\n{...}\n body cookies headers params query', PosixPath('server/auth.ts'), 'config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection') match_id = 14174fd4eb787c069cfa2038736c576b444e518b8291eaa9d89b22085353e1167285204506cd57b2ad9c17156d958edd30cbc3f2f0a3284419c4845182c5ab8c_0
2025-05-26 21:33:53,139 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 8d554a4a4b58e525ebd15c19f508e5bdb0857c3c1b56af0f13e8ad11729eed94ba7539cdcfaa3c315443e0e29d7edfb453b23307d2a8b5a302156b281fd66eec_0
2025-05-26 21:33:53,140 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,req.url,...) path.resolve(...,req.url,...) req.url req.url import 'path';\n...\n path.join(...,req.url,...) path.resolve(...,req.url,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 509b264bfd6206dbda9d023964e0e76c57dadc518e7da5a049a18edd7ca2ca8d4d485b78a887170e6554955010514ce437d050a98b9ed630c816763ba7751f95_0
2025-05-26 21:33:53,141 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,req.url,...) path.resolve(...,req.url,...) req.url req.url import 'path';\n...\n path.join(...,req.url,...) path.resolve(...,req.url,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 509b264bfd6206dbda9d023964e0e76c57dadc518e7da5a049a18edd7ca2ca8d4d485b78a887170e6554955010514ce437d050a98b9ed630c816763ba7751f95_0
2025-05-26 21:33:53,142 - semgrep.rule_match - DEBUG - match_key = ("path = require('path');\n...\n import path from 'path';\n...\n path.join(...,req.url,...) path.resolve(...,req.url,...) req.url req.url import 'path';\n...\n path.join(...,req.url,...) path.resolve(...,req.url,...) req function ... (...,req,...) {...}\n function ... (...,{...,req,...},...) {...}\n", PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.path-traversal.path-join-resolve-traversal') match_id = 509b264bfd6206dbda9d023964e0e76c57dadc518e7da5a049a18edd7ca2ca8d4d485b78a887170e6554955010514ce437d050a98b9ed630c816763ba7751f95_0
2025-05-26 21:33:53,142 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = b1ea9a27b46842f411c4380eb4f89ac483c4f202f343f5db5c0e7c78d62c4490f6cb72d16f68deccfbafaf7cfc341e5945186fdea2bdc32ddee6565fc4ab7d8a_0
2025-05-26 21:33:53,143 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile($SMTH, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync($SMTH, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp($SMTH, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync($SMTH, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link($SMTH, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync($SMTH, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename($SMTH, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync($SMTH, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink($SMTH, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync($SMTH, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile($SMTH, filePath,...) copyFileSync(filePath, ...) copyFileSync($SMTH, filePath, ...) cp(filePath, ...) cp($SMTH, filePath, ...) cpSync(filePath, ...) cpSync($SMTH, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link($SMTH, filePath, ...) linkSync(filePath, ...) linkSync($SMTH, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename($SMTH, filePath, ...) renameSync(filePath, ...) renameSync($SMTH, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink($SMTH, filePath, ...) symlinkSync(filePath, ...) symlinkSync($SMTH, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 1c50179e6094c3c4a1bd6efd93165e8268cf53ab9c5cd0747d390767e11097307f33bc45d8157cd07ad075b152d4065e9135efe900f44a326d2763256eba8d97_0
2025-05-26 21:33:53,144 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile($SMTH, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync($SMTH, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp($SMTH, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync($SMTH, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link($SMTH, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync($SMTH, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename($SMTH, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync($SMTH, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink($SMTH, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync($SMTH, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile($SMTH, filePath,...) copyFileSync(filePath, ...) copyFileSync($SMTH, filePath, ...) cp(filePath, ...) cp($SMTH, filePath, ...) cpSync(filePath, ...) cpSync($SMTH, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link($SMTH, filePath, ...) linkSync(filePath, ...) linkSync($SMTH, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename($SMTH, filePath, ...) renameSync(filePath, ...) renameSync($SMTH, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink($SMTH, filePath, ...) symlinkSync(filePath, ...) symlinkSync($SMTH, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 1c50179e6094c3c4a1bd6efd93165e8268cf53ab9c5cd0747d390767e11097307f33bc45d8157cd07ad075b152d4065e9135efe900f44a326d2763256eba8d97_0
2025-05-26 21:33:53,144 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile($SMTH, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync($SMTH, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp($SMTH, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync($SMTH, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link($SMTH, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync($SMTH, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename($SMTH, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync($SMTH, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink($SMTH, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync($SMTH, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile($SMTH, filePath,...) copyFileSync(filePath, ...) copyFileSync($SMTH, filePath, ...) cp(filePath, ...) cp($SMTH, filePath, ...) cpSync(filePath, ...) cpSync($SMTH, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link($SMTH, filePath, ...) linkSync(filePath, ...) linkSync($SMTH, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename($SMTH, filePath, ...) renameSync(filePath, ...) renameSync($SMTH, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink($SMTH, filePath, ...) symlinkSync(filePath, ...) symlinkSync($SMTH, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 1c50179e6094c3c4a1bd6efd93165e8268cf53ab9c5cd0747d390767e11097307f33bc45d8157cd07ad075b152d4065e9135efe900f44a326d2763256eba8d97_0
2025-05-26 21:33:53,145 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection') match_id = b8968e1348a07753f9c80734bdfd5c81af536e1b0e18fbcfc1408602087338ffd12c6ec9d9f1522978c9221b1fbfa466b3fe80a2e5b575edfddbb20d912a2d44_0
2025-05-26 21:33:53,146 - semgrep.rule_match - DEBUG - match_key = ('"..." + updateData[field]=req.body[field]\n updateData[field]=req.body[field] updateData[field]=req.body[field] + "..."\n updateData["..."] = ... updateData[...] = "..." updateData[...] = ... app.put(..., function $FUNC(req, res) {...}) app.put(..., function $FUNC(req, res, $NEXT) {...}) put ^(get|post|put|head|delete|options)$ function ... (req, res) {...} function ... (req, res, $NEXT) {...} req.body req.cookies req.headers req.params req.query req ({ req }: Request,res: Response) => {...}\n ({ req }: Request,res: Response, $NEXT: NextFunction) =>\n{...}\n body cookies headers params query', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection') match_id = 7b500a77b81df9cb22b118760403646dda8658d6bf387565365ce53c435cf930b34c6f01e8e07be7b4e3bd83ea6803d96061f9465c4821ead41c700991a2c456_0
2025-05-26 21:33:53,146 - semgrep.rule_match - DEBUG - match_key = ('"..." + updateData[field]=req.body[field]\n updateData[field]=req.body[field] updateData[field]=req.body[field] + "..."\n updateData["..."] = ... updateData[...] = "..." updateData[...] = ... app.put(..., function $FUNC(req, res) {...}) app.put(..., function $FUNC(req, res, $NEXT) {...}) put ^(get|post|put|head|delete|options)$ function ... (req, res) {...} function ... (req, res, $NEXT) {...} req.body req.cookies req.headers req.params req.query req ({ req }: Request,res: Response) => {...}\n ({ req }: Request,res: Response, $NEXT: NextFunction) =>\n{...}\n body cookies headers params query', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection') match_id = 7b500a77b81df9cb22b118760403646dda8658d6bf387565365ce53c435cf930b34c6f01e8e07be7b4e3bd83ea6803d96061f9465c4821ead41c700991a2c456_0
2025-05-26 21:33:53,147 - semgrep.rule_match - DEBUG - match_key = ('"..." + updateData[field]=req.body[field]\n updateData[field]=req.body[field] updateData[field]=req.body[field] + "..."\n updateData["..."] = ... updateData[...] = "..." updateData[...] = ... app.put(..., function $FUNC(req, res) {...}) app.put(..., function $FUNC(req, res, $NEXT) {...}) put ^(get|post|put|head|delete|options)$ function ... (req, res) {...} function ... (req, res, $NEXT) {...} req.body req.cookies req.headers req.params req.query req ({ req }: Request,res: Response) => {...}\n ({ req }: Request,res: Response, $NEXT: NextFunction) =>\n{...}\n body cookies headers params query', PosixPath('server/routes.ts'), 'config..semgrep.vendored-rules.javascript.express.security.audit.remote-property-injection') match_id = 7b500a77b81df9cb22b118760403646dda8658d6bf387565365ce53c435cf930b34c6f01e8e07be7b4e3bd83ea6803d96061f9465c4821ead41c700991a2c456_0
2025-05-26 21:33:53,147 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/storage.ts'), 'config..semgrep.vendored-rules.generic.secrets.security.detected-bcrypt-hash') match_id = ecf86adad8aef13c8cbe11bbacf8b5e0919dd631d76faa78a82800d0ee33930b1d893c26565d5e22ae32af98bc929747d48ae0371cc967c4d202c58a954901e8_0
2025-05-26 21:33:53,148 - semgrep.rule_match - DEBUG - match_key = ('\\$2[aby]?\\$[\\d]+\\$[./A-Za-z0-9]{53}', PosixPath('server/storage.ts'), 'config..semgrep.vendored-rules.generic.secrets.security.detected-bcrypt-hash') match_id = 9758eced467894ef9e0fde908a3e58e8ad0c26d4ea034a064dd61a734850add980e748a5d9c83a8cf61f4dd1472c1067a06c501be4943d85b8a1f00a43cd2a74_0
2025-05-26 21:33:53,148 - semgrep.rule_match - DEBUG - match_key = ('\\$2[aby]?\\$[\\d]+\\$[./A-Za-z0-9]{53}', PosixPath('server/storage.ts'), 'config..semgrep.vendored-rules.generic.secrets.security.detected-bcrypt-hash') match_id = 9758eced467894ef9e0fde908a3e58e8ad0c26d4ea034a064dd61a734850add980e748a5d9c83a8cf61f4dd1472c1067a06c501be4943d85b8a1f00a43cd2a74_0
2025-05-26 21:33:53,148 - semgrep.rule_match - DEBUG - match_key = ('\\$2[aby]?\\$[\\d]+\\$[./A-Za-z0-9]{53}', PosixPath('server/storage.ts'), 'config..semgrep.vendored-rules.generic.secrets.security.detected-bcrypt-hash') match_id = 9758eced467894ef9e0fde908a3e58e8ad0c26d4ea034a064dd61a734850add980e748a5d9c83a8cf61f4dd1472c1067a06c501be4943d85b8a1f00a43cd2a74_0
2025-05-26 21:33:53,149 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 9a3550475865461ed1cc19dc0f6c68d1bf6fbc3d9bf0848d3baddb3a7da83fe5736884d7da124de93a34298798798b60a956d50547db20952f8f12b8b5f24095_0
2025-05-26 21:33:53,150 - semgrep.rule_match - DEBUG - match_key = ('filePath function ... (..., filePath,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile($SMTH, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync($SMTH, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp($SMTH, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync($SMTH, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link($SMTH, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync($SMTH, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename($SMTH, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync($SMTH, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink($SMTH, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync($SMTH, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile($SMTH, filePath,...) copyFileSync(filePath, ...) copyFileSync($SMTH, filePath, ...) cp(filePath, ...) cp($SMTH, filePath, ...) cpSync(filePath, ...) cpSync($SMTH, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link($SMTH, filePath, ...) linkSync(filePath, ...) linkSync($SMTH, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename($SMTH, filePath, ...) renameSync(filePath, ...) renameSync($SMTH, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink($SMTH, filePath, ...) symlinkSync(filePath, ...) symlinkSync($SMTH, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e4111b8337adca64916d18bb23dda9d7a8409c0d8d00c7fd23d0213fd6cd05fb862ee405f0556f45f8dc53414faaa46ebb40e16b1babfb9ae1f2e5a568a83a2a_0
2025-05-26 21:33:53,150 - semgrep.rule_match - DEBUG - match_key = ('filePath function ... (..., filePath,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile($SMTH, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync($SMTH, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp($SMTH, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync($SMTH, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link($SMTH, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync($SMTH, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename($SMTH, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync($SMTH, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink($SMTH, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync($SMTH, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile($SMTH, filePath,...) copyFileSync(filePath, ...) copyFileSync($SMTH, filePath, ...) cp(filePath, ...) cp($SMTH, filePath, ...) cpSync(filePath, ...) cpSync($SMTH, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link($SMTH, filePath, ...) linkSync(filePath, ...) linkSync($SMTH, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename($SMTH, filePath, ...) renameSync(filePath, ...) renameSync($SMTH, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink($SMTH, filePath, ...) symlinkSync(filePath, ...) symlinkSync($SMTH, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e4111b8337adca64916d18bb23dda9d7a8409c0d8d00c7fd23d0213fd6cd05fb862ee405f0556f45f8dc53414faaa46ebb40e16b1babfb9ae1f2e5a568a83a2a_0
2025-05-26 21:33:53,151 - semgrep.rule_match - DEBUG - match_key = ('filePath function ... (..., filePath,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile($SMTH, filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync($SMTH, filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp($SMTH, filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync($SMTH, filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link($SMTH, filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync($SMTH, filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename($SMTH, filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync($SMTH, filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink($SMTH, filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync($SMTH, filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile($SMTH, filePath,...) copyFileSync(filePath, ...) copyFileSync($SMTH, filePath, ...) cp(filePath, ...) cp($SMTH, filePath, ...) cpSync(filePath, ...) cpSync($SMTH, filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link($SMTH, filePath, ...) linkSync(filePath, ...) linkSync($SMTH, filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename($SMTH, filePath, ...) renameSync(filePath, ...) renameSync($SMTH, filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink($SMTH, filePath, ...) symlinkSync(filePath, ...) symlinkSync($SMTH, filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = e4111b8337adca64916d18bb23dda9d7a8409c0d8d00c7fd23d0213fd6cd05fb862ee405f0556f45f8dc53414faaa46ebb40e16b1babfb9ae1f2e5a568a83a2a_0
2025-05-26 21:33:53,151 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 9a3550475865461ed1cc19dc0f6c68d1bf6fbc3d9bf0848d3baddb3a7da83fe5736884d7da124de93a34298798798b60a956d50547db20952f8f12b8b5f24095_0
2025-05-26 21:33:53,152 - semgrep.rule_match - DEBUG - match_key = ('filePath function ... (..., filePath,...) {...} outputPath+\'.processed\' fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputPath+\'.processed\',...) fs. ... .accessSync(outputPath+\'.processed\', ...) fs. ... .appendFile(outputPath+\'.processed\',...) fs. ... .appendFileSync(outputPath+\'.processed\', ...) fs. ... .chmod(outputPath+\'.processed\',...) fs. ... .chmodSync(outputPath+\'.processed\', ...) fs. ... .chown(outputPath+\'.processed\',...) fs. ... .chownSync(outputPath+\'.processed\', ...) fs. ... .close(outputPath+\'.processed\',...) fs. ... .closeSync(outputPath+\'.processed\', ...) fs. ... .copyFile(outputPath+\'.processed\',...) fs. ... .copyFile($SMTH, outputPath+\'.processed\',...) fs. ... .copyFileSync(outputPath+\'.processed\', ...) fs. ... .copyFileSync($SMTH, outputPath+\'.processed\', ...) fs. ... .cp(outputPath+\'.processed\', ...) fs. ... .cp($SMTH, outputPath+\'.processed\', ...) fs. ... .cpSync(outputPath+\'.processed\', ...) fs. ... .cpSync($SMTH, outputPath+\'.processed\', ...) fs. ... .createReadStream(outputPath+\'.processed\',...) fs. ... .createWriteStream(outputPath+\'.processed\',...) fs. ... .exists(outputPath+\'.processed\', ...) fs. ... .existsSync(outputPath+\'.processed\', ...) fs. ... .fchmod(outputPath+\'.processed\', ...) fs. ... .fchmodSync(outputPath+\'.processed\', ...) fs. ... .fchown(outputPath+\'.processed\', ...) fs. ... .fchownSync(outputPath+\'.processed\', ...) fs. ... .fdatasync(outputPath+\'.processed\', ...) fs. ... .fdatasyncSync(outputPath+\'.processed\', ...) fs. ... .fstat(outputPath+\'.processed\', ...) fs. ... .fstatSync(outputPath+\'.processed\', ...) fs. ... .fsync(outputPath+\'.processed\', ...) fs. ... .fsyncSync(outputPath+\'.processed\', ...) fs. ... .ftruncate(outputPath+\'.processed\', ...) fs. ... .ftruncateSync(outputPath+\'.processed\', ...) fs. ... .futimes(outputPath+\'.processed\', ...) fs. ... .futimesSync(outputPath+\'.processed\', ...) fs. ... .lchmod(outputPath+\'.processed\', ...) fs. ... .lchmodSync(outputPath+\'.processed\', ...) fs. ... .lchown(outputPath+\'.processed\', ...) fs. ... .lchownSync(outputPath+\'.processed\', ...) fs. ... .link(outputPath+\'.processed\', ...) fs. ... .link($SMTH, outputPath+\'.processed\', ...) fs. ... .linkSync(outputPath+\'.processed\', ...) fs. ... .linkSync($SMTH, outputPath+\'.processed\', ...) fs. ... .lstat(outputPath+\'.processed\', ...) fs. ... .lstatSync(outputPath+\'.processed\', ...) fs. ... .lutimes(outputPath+\'.processed\', ...) fs. ... .lutimesSync(outputPath+\'.processed\', ...) fs. ... .mkdir(outputPath+\'.processed\', ...) fs. ... .mkdirSync(outputPath+\'.processed\', ...) fs. ... .mkdtemp(outputPath+\'.processed\', ...) fs. ... .mkdtempSync(outputPath+\'.processed\', ...) fs. ... .open(outputPath+\'.processed\', ...) fs. ... .openSync(outputPath+\'.processed\', ...) fs. ... .opendir(outputPath+\'.processed\', ...) fs. ... .opendirSync(outputPath+\'.processed\', ...) fs. ... .read(outputPath+\'.processed\', ...) fs. ... .read(outputPath+\'.processed\', ...) fs. ... .readFile(outputPath+\'.processed\', ...) fs. ... .readFileSync(outputPath+\'.processed\', ...) fs. ... .readSync(outputPath+\'.processed\', ...) fs. ... .readSync(outputPath+\'.processed\', ...) fs. ... .readdir(outputPath+\'.processed\', ...) fs. ... .readdirSync(outputPath+\'.processed\', ...) fs. ... .readlink(outputPath+\'.processed\', ...) fs. ... .readlinkSync(outputPath+\'.processed\', ...) fs. ... .readv(outputPath+\'.processed\', ...) fs. ... .readvSync(outputPath+\'.processed\', ...) fs. ... .realpath(outputPath+\'.processed\', ...) fs. ... .realpath.native(outputPath+\'.processed\', ...) fs. ... .realpathSync.native(outputPath+\'.processed\', ...) fs. ... .realpathync(outputPath+\'.processed\', ...) fs. ... .rename(outputPath+\'.processed\', ...) fs. ... .rename($SMTH, outputPath+\'.processed\', ...) fs. ... .renameSync(outputPath+\'.processed\', ...) fs. ... .renameSync($SMTH, outputPath+\'.processed\', ...) fs. ... .rm(outputPath+\'.processed\', ...) fs. ... .rmSync(outputPath+\'.processed\', ...) fs. ... .rmdir(outputPath+\'.processed\', ...) fs. ... .rmdirSync(outputPath+\'.processed\', ...) fs. ... .stat(outputPath+\'.processed\', ...) fs. ... .statSync(outputPath+\'.processed\', ...) fs. ... .symlink(outputPath+\'.processed\', ...) fs. ... .symlink($SMTH, outputPath+\'.processed\', ...) fs. ... .symlinkSync(outputPath+\'.processed\', ...) fs. ... .symlinkSync($SMTH, outputPath+\'.processed\', ...) fs. ... .truncate(outputPath+\'.processed\', ...) fs. ... .truncateSync(outputPath+\'.processed\', ...) fs. ... .unlink(outputPath+\'.processed\', ...) fs. ... .unlinkSync(outputPath+\'.processed\', ...) fs. ... .unwatchFile(outputPath+\'.processed\', ...) fs. ... .utimes(outputPath+\'.processed\', ...) fs. ... .utimesSync(outputPath+\'.processed\', ...) fs. ... .watch(outputPath+\'.processed\', ...) fs. ... .watchFile(outputPath+\'.processed\', ...) fs. ... .write(outputPath+\'.processed\', ...) fs. ... .writeFile(outputPath+\'.processed\', ...) fs. ... .writeFileSync(outputPath+\'.processed\', ...) fs. ... .writeSync(outputPath+\'.processed\', ...) fs. ... .writev(outputPath+\'.processed\', ...) fs. ... .writevSync(outputPath+\'.processed\', ...) outputPath+\'.processed\' $METHOD("...", ...) access(outputPath+\'.processed\',...) accessSync(outputPath+\'.processed\', ...) appendFile(outputPath+\'.processed\',...) appendFileSync(outputPath+\'.processed\', ...) chmod(outputPath+\'.processed\',...) chmodSync(outputPath+\'.processed\', ...) chown(outputPath+\'.processed\',...) chownSync(outputPath+\'.processed\', ...) close(outputPath+\'.processed\',...) closeSync(outputPath+\'.processed\', ...) copyFile(outputPath+\'.processed\',...) copyFile($SMTH, outputPath+\'.processed\',...) copyFileSync(outputPath+\'.processed\', ...) copyFileSync($SMTH, outputPath+\'.processed\', ...) cp(outputPath+\'.processed\', ...) cp($SMTH, outputPath+\'.processed\', ...) cpSync(outputPath+\'.processed\', ...) cpSync($SMTH, outputPath+\'.processed\', ...) createReadStream(outputPath+\'.processed\',...) createWriteStream(outputPath+\'.processed\',...) exists(outputPath+\'.processed\', ...) existsSync(outputPath+\'.processed\', ...) fchmod(outputPath+\'.processed\', ...) fchmodSync(outputPath+\'.processed\', ...) fchown(outputPath+\'.processed\', ...) fchownSync(outputPath+\'.processed\', ...) fdatasync(outputPath+\'.processed\', ...) fdatasyncSync(outputPath+\'.processed\', ...) fstat(outputPath+\'.processed\', ...) fstatSync(outputPath+\'.processed\', ...) fsync(outputPath+\'.processed\', ...) fsyncSync(outputPath+\'.processed\', ...) ftruncate(outputPath+\'.processed\', ...) ftruncateSync(outputPath+\'.processed\', ...) futimes(outputPath+\'.processed\', ...) futimesSync(outputPath+\'.processed\', ...) lchmod(outputPath+\'.processed\', ...) lchmodSync(outputPath+\'.processed\', ...) lchown(outputPath+\'.processed\', ...) lchownSync(outputPath+\'.processed\', ...) link(outputPath+\'.processed\', ...) link($SMTH, outputPath+\'.processed\', ...) linkSync(outputPath+\'.processed\', ...) linkSync($SMTH, outputPath+\'.processed\', ...) lstat(outputPath+\'.processed\', ...) lstatSync(outputPath+\'.processed\', ...) lutimes(outputPath+\'.processed\', ...) lutimesSync(outputPath+\'.processed\', ...) mkdir(outputPath+\'.processed\', ...) mkdirSync(outputPath+\'.processed\', ...) mkdtemp(outputPath+\'.processed\', ...) mkdtempSync(outputPath+\'.processed\', ...) open(outputPath+\'.processed\', ...) openSync(outputPath+\'.processed\', ...) opendir(outputPath+\'.processed\', ...) opendirSync(outputPath+\'.processed\', ...) read(outputPath+\'.processed\', ...) read(outputPath+\'.processed\', ...) readFile(outputPath+\'.processed\', ...) readFileSync(outputPath+\'.processed\', ...) readSync(outputPath+\'.processed\', ...) readSync(outputPath+\'.processed\', ...) readdir(outputPath+\'.processed\', ...) readdirSync(outputPath+\'.processed\', ...) readlink(outputPath+\'.processed\', ...) readlinkSync(outputPath+\'.processed\', ...) readv(outputPath+\'.processed\', ...) readvSync(outputPath+\'.processed\', ...) realpath(outputPath+\'.processed\', ...) realpath.native(outputPath+\'.processed\', ...) realpathSync.native(outputPath+\'.processed\', ...) realpathync(outputPath+\'.processed\', ...) rename(outputPath+\'.processed\', ...) rename($SMTH, outputPath+\'.processed\', ...) renameSync(outputPath+\'.processed\', ...) renameSync($SMTH, outputPath+\'.processed\', ...) rm(outputPath+\'.processed\', ...) rmSync(outputPath+\'.processed\', ...) rmdir(outputPath+\'.processed\', ...) rmdirSync(outputPath+\'.processed\', ...) stat(outputPath+\'.processed\', ...) statSync(outputPath+\'.processed\', ...) symlink(outputPath+\'.processed\', ...) symlink($SMTH, outputPath+\'.processed\', ...) symlinkSync(outputPath+\'.processed\', ...) symlinkSync($SMTH, outputPath+\'.processed\', ...) truncate(outputPath+\'.processed\', ...) truncateSync(outputPath+\'.processed\', ...) unlink(outputPath+\'.processed\', ...) unlinkSync(outputPath+\'.processed\', ...) unwatchFile(outputPath+\'.processed\', ...) utimes(outputPath+\'.processed\', ...) utimesSync(outputPath+\'.processed\', ...) watch(outputPath+\'.processed\', ...) watchFile(outputPath+\'.processed\', ...) write(outputPath+\'.processed\', ...) writeFile(outputPath+\'.processed\', ...) writeFileSync(outputPath+\'.processed\', ...) writeSync(outputPath+\'.processed\', ...) writev(outputPath+\'.processed\', ...) writevSync(outputPath+\'.processed\', ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = be464f4b51fe75bf4dc34b961fa1b139b093ba885286c2e57a60ea59760c25d6c0170572003a0e10fae4664dcebeebe43daa4584f16c9cc7be0a84fe9077ae4d_0
2025-05-26 21:33:53,153 - semgrep.rule_match - DEBUG - match_key = ('filePath function ... (..., filePath,...) {...} outputPath+\'.processed\' fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputPath+\'.processed\',...) fs. ... .accessSync(outputPath+\'.processed\', ...) fs. ... .appendFile(outputPath+\'.processed\',...) fs. ... .appendFileSync(outputPath+\'.processed\', ...) fs. ... .chmod(outputPath+\'.processed\',...) fs. ... .chmodSync(outputPath+\'.processed\', ...) fs. ... .chown(outputPath+\'.processed\',...) fs. ... .chownSync(outputPath+\'.processed\', ...) fs. ... .close(outputPath+\'.processed\',...) fs. ... .closeSync(outputPath+\'.processed\', ...) fs. ... .copyFile(outputPath+\'.processed\',...) fs. ... .copyFile($SMTH, outputPath+\'.processed\',...) fs. ... .copyFileSync(outputPath+\'.processed\', ...) fs. ... .copyFileSync($SMTH, outputPath+\'.processed\', ...) fs. ... .cp(outputPath+\'.processed\', ...) fs. ... .cp($SMTH, outputPath+\'.processed\', ...) fs. ... .cpSync(outputPath+\'.processed\', ...) fs. ... .cpSync($SMTH, outputPath+\'.processed\', ...) fs. ... .createReadStream(outputPath+\'.processed\',...) fs. ... .createWriteStream(outputPath+\'.processed\',...) fs. ... .exists(outputPath+\'.processed\', ...) fs. ... .existsSync(outputPath+\'.processed\', ...) fs. ... .fchmod(outputPath+\'.processed\', ...) fs. ... .fchmodSync(outputPath+\'.processed\', ...) fs. ... .fchown(outputPath+\'.processed\', ...) fs. ... .fchownSync(outputPath+\'.processed\', ...) fs. ... .fdatasync(outputPath+\'.processed\', ...) fs. ... .fdatasyncSync(outputPath+\'.processed\', ...) fs. ... .fstat(outputPath+\'.processed\', ...) fs. ... .fstatSync(outputPath+\'.processed\', ...) fs. ... .fsync(outputPath+\'.processed\', ...) fs. ... .fsyncSync(outputPath+\'.processed\', ...) fs. ... .ftruncate(outputPath+\'.processed\', ...) fs. ... .ftruncateSync(outputPath+\'.processed\', ...) fs. ... .futimes(outputPath+\'.processed\', ...) fs. ... .futimesSync(outputPath+\'.processed\', ...) fs. ... .lchmod(outputPath+\'.processed\', ...) fs. ... .lchmodSync(outputPath+\'.processed\', ...) fs. ... .lchown(outputPath+\'.processed\', ...) fs. ... .lchownSync(outputPath+\'.processed\', ...) fs. ... .link(outputPath+\'.processed\', ...) fs. ... .link($SMTH, outputPath+\'.processed\', ...) fs. ... .linkSync(outputPath+\'.processed\', ...) fs. ... .linkSync($SMTH, outputPath+\'.processed\', ...) fs. ... .lstat(outputPath+\'.processed\', ...) fs. ... .lstatSync(outputPath+\'.processed\', ...) fs. ... .lutimes(outputPath+\'.processed\', ...) fs. ... .lutimesSync(outputPath+\'.processed\', ...) fs. ... .mkdir(outputPath+\'.processed\', ...) fs. ... .mkdirSync(outputPath+\'.processed\', ...) fs. ... .mkdtemp(outputPath+\'.processed\', ...) fs. ... .mkdtempSync(outputPath+\'.processed\', ...) fs. ... .open(outputPath+\'.processed\', ...) fs. ... .openSync(outputPath+\'.processed\', ...) fs. ... .opendir(outputPath+\'.processed\', ...) fs. ... .opendirSync(outputPath+\'.processed\', ...) fs. ... .read(outputPath+\'.processed\', ...) fs. ... .read(outputPath+\'.processed\', ...) fs. ... .readFile(outputPath+\'.processed\', ...) fs. ... .readFileSync(outputPath+\'.processed\', ...) fs. ... .readSync(outputPath+\'.processed\', ...) fs. ... .readSync(outputPath+\'.processed\', ...) fs. ... .readdir(outputPath+\'.processed\', ...) fs. ... .readdirSync(outputPath+\'.processed\', ...) fs. ... .readlink(outputPath+\'.processed\', ...) fs. ... .readlinkSync(outputPath+\'.processed\', ...) fs. ... .readv(outputPath+\'.processed\', ...) fs. ... .readvSync(outputPath+\'.processed\', ...) fs. ... .realpath(outputPath+\'.processed\', ...) fs. ... .realpath.native(outputPath+\'.processed\', ...) fs. ... .realpathSync.native(outputPath+\'.processed\', ...) fs. ... .realpathync(outputPath+\'.processed\', ...) fs. ... .rename(outputPath+\'.processed\', ...) fs. ... .rename($SMTH, outputPath+\'.processed\', ...) fs. ... .renameSync(outputPath+\'.processed\', ...) fs. ... .renameSync($SMTH, outputPath+\'.processed\', ...) fs. ... .rm(outputPath+\'.processed\', ...) fs. ... .rmSync(outputPath+\'.processed\', ...) fs. ... .rmdir(outputPath+\'.processed\', ...) fs. ... .rmdirSync(outputPath+\'.processed\', ...) fs. ... .stat(outputPath+\'.processed\', ...) fs. ... .statSync(outputPath+\'.processed\', ...) fs. ... .symlink(outputPath+\'.processed\', ...) fs. ... .symlink($SMTH, outputPath+\'.processed\', ...) fs. ... .symlinkSync(outputPath+\'.processed\', ...) fs. ... .symlinkSync($SMTH, outputPath+\'.processed\', ...) fs. ... .truncate(outputPath+\'.processed\', ...) fs. ... .truncateSync(outputPath+\'.processed\', ...) fs. ... .unlink(outputPath+\'.processed\', ...) fs. ... .unlinkSync(outputPath+\'.processed\', ...) fs. ... .unwatchFile(outputPath+\'.processed\', ...) fs. ... .utimes(outputPath+\'.processed\', ...) fs. ... .utimesSync(outputPath+\'.processed\', ...) fs. ... .watch(outputPath+\'.processed\', ...) fs. ... .watchFile(outputPath+\'.processed\', ...) fs. ... .write(outputPath+\'.processed\', ...) fs. ... .writeFile(outputPath+\'.processed\', ...) fs. ... .writeFileSync(outputPath+\'.processed\', ...) fs. ... .writeSync(outputPath+\'.processed\', ...) fs. ... .writev(outputPath+\'.processed\', ...) fs. ... .writevSync(outputPath+\'.processed\', ...) outputPath+\'.processed\' $METHOD("...", ...) access(outputPath+\'.processed\',...) accessSync(outputPath+\'.processed\', ...) appendFile(outputPath+\'.processed\',...) appendFileSync(outputPath+\'.processed\', ...) chmod(outputPath+\'.processed\',...) chmodSync(outputPath+\'.processed\', ...) chown(outputPath+\'.processed\',...) chownSync(outputPath+\'.processed\', ...) close(outputPath+\'.processed\',...) closeSync(outputPath+\'.processed\', ...) copyFile(outputPath+\'.processed\',...) copyFile($SMTH, outputPath+\'.processed\',...) copyFileSync(outputPath+\'.processed\', ...) copyFileSync($SMTH, outputPath+\'.processed\', ...) cp(outputPath+\'.processed\', ...) cp($SMTH, outputPath+\'.processed\', ...) cpSync(outputPath+\'.processed\', ...) cpSync($SMTH, outputPath+\'.processed\', ...) createReadStream(outputPath+\'.processed\',...) createWriteStream(outputPath+\'.processed\',...) exists(outputPath+\'.processed\', ...) existsSync(outputPath+\'.processed\', ...) fchmod(outputPath+\'.processed\', ...) fchmodSync(outputPath+\'.processed\', ...) fchown(outputPath+\'.processed\', ...) fchownSync(outputPath+\'.processed\', ...) fdatasync(outputPath+\'.processed\', ...) fdatasyncSync(outputPath+\'.processed\', ...) fstat(outputPath+\'.processed\', ...) fstatSync(outputPath+\'.processed\', ...) fsync(outputPath+\'.processed\', ...) fsyncSync(outputPath+\'.processed\', ...) ftruncate(outputPath+\'.processed\', ...) ftruncateSync(outputPath+\'.processed\', ...) futimes(outputPath+\'.processed\', ...) futimesSync(outputPath+\'.processed\', ...) lchmod(outputPath+\'.processed\', ...) lchmodSync(outputPath+\'.processed\', ...) lchown(outputPath+\'.processed\', ...) lchownSync(outputPath+\'.processed\', ...) link(outputPath+\'.processed\', ...) link($SMTH, outputPath+\'.processed\', ...) linkSync(outputPath+\'.processed\', ...) linkSync($SMTH, outputPath+\'.processed\', ...) lstat(outputPath+\'.processed\', ...) lstatSync(outputPath+\'.processed\', ...) lutimes(outputPath+\'.processed\', ...) lutimesSync(outputPath+\'.processed\', ...) mkdir(outputPath+\'.processed\', ...) mkdirSync(outputPath+\'.processed\', ...) mkdtemp(outputPath+\'.processed\', ...) mkdtempSync(outputPath+\'.processed\', ...) open(outputPath+\'.processed\', ...) openSync(outputPath+\'.processed\', ...) opendir(outputPath+\'.processed\', ...) opendirSync(outputPath+\'.processed\', ...) read(outputPath+\'.processed\', ...) read(outputPath+\'.processed\', ...) readFile(outputPath+\'.processed\', ...) readFileSync(outputPath+\'.processed\', ...) readSync(outputPath+\'.processed\', ...) readSync(outputPath+\'.processed\', ...) readdir(outputPath+\'.processed\', ...) readdirSync(outputPath+\'.processed\', ...) readlink(outputPath+\'.processed\', ...) readlinkSync(outputPath+\'.processed\', ...) readv(outputPath+\'.processed\', ...) readvSync(outputPath+\'.processed\', ...) realpath(outputPath+\'.processed\', ...) realpath.native(outputPath+\'.processed\', ...) realpathSync.native(outputPath+\'.processed\', ...) realpathync(outputPath+\'.processed\', ...) rename(outputPath+\'.processed\', ...) rename($SMTH, outputPath+\'.processed\', ...) renameSync(outputPath+\'.processed\', ...) renameSync($SMTH, outputPath+\'.processed\', ...) rm(outputPath+\'.processed\', ...) rmSync(outputPath+\'.processed\', ...) rmdir(outputPath+\'.processed\', ...) rmdirSync(outputPath+\'.processed\', ...) stat(outputPath+\'.processed\', ...) statSync(outputPath+\'.processed\', ...) symlink(outputPath+\'.processed\', ...) symlink($SMTH, outputPath+\'.processed\', ...) symlinkSync(outputPath+\'.processed\', ...) symlinkSync($SMTH, outputPath+\'.processed\', ...) truncate(outputPath+\'.processed\', ...) truncateSync(outputPath+\'.processed\', ...) unlink(outputPath+\'.processed\', ...) unlinkSync(outputPath+\'.processed\', ...) unwatchFile(outputPath+\'.processed\', ...) utimes(outputPath+\'.processed\', ...) utimesSync(outputPath+\'.processed\', ...) watch(outputPath+\'.processed\', ...) watchFile(outputPath+\'.processed\', ...) write(outputPath+\'.processed\', ...) writeFile(outputPath+\'.processed\', ...) writeFileSync(outputPath+\'.processed\', ...) writeSync(outputPath+\'.processed\', ...) writev(outputPath+\'.processed\', ...) writevSync(outputPath+\'.processed\', ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = be464f4b51fe75bf4dc34b961fa1b139b093ba885286c2e57a60ea59760c25d6c0170572003a0e10fae4664dcebeebe43daa4584f16c9cc7be0a84fe9077ae4d_0
2025-05-26 21:33:53,154 - semgrep.rule_match - DEBUG - match_key = ('filePath function ... (..., filePath,...) {...} outputPath+\'.processed\' fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(outputPath+\'.processed\',...) fs. ... .accessSync(outputPath+\'.processed\', ...) fs. ... .appendFile(outputPath+\'.processed\',...) fs. ... .appendFileSync(outputPath+\'.processed\', ...) fs. ... .chmod(outputPath+\'.processed\',...) fs. ... .chmodSync(outputPath+\'.processed\', ...) fs. ... .chown(outputPath+\'.processed\',...) fs. ... .chownSync(outputPath+\'.processed\', ...) fs. ... .close(outputPath+\'.processed\',...) fs. ... .closeSync(outputPath+\'.processed\', ...) fs. ... .copyFile(outputPath+\'.processed\',...) fs. ... .copyFile($SMTH, outputPath+\'.processed\',...) fs. ... .copyFileSync(outputPath+\'.processed\', ...) fs. ... .copyFileSync($SMTH, outputPath+\'.processed\', ...) fs. ... .cp(outputPath+\'.processed\', ...) fs. ... .cp($SMTH, outputPath+\'.processed\', ...) fs. ... .cpSync(outputPath+\'.processed\', ...) fs. ... .cpSync($SMTH, outputPath+\'.processed\', ...) fs. ... .createReadStream(outputPath+\'.processed\',...) fs. ... .createWriteStream(outputPath+\'.processed\',...) fs. ... .exists(outputPath+\'.processed\', ...) fs. ... .existsSync(outputPath+\'.processed\', ...) fs. ... .fchmod(outputPath+\'.processed\', ...) fs. ... .fchmodSync(outputPath+\'.processed\', ...) fs. ... .fchown(outputPath+\'.processed\', ...) fs. ... .fchownSync(outputPath+\'.processed\', ...) fs. ... .fdatasync(outputPath+\'.processed\', ...) fs. ... .fdatasyncSync(outputPath+\'.processed\', ...) fs. ... .fstat(outputPath+\'.processed\', ...) fs. ... .fstatSync(outputPath+\'.processed\', ...) fs. ... .fsync(outputPath+\'.processed\', ...) fs. ... .fsyncSync(outputPath+\'.processed\', ...) fs. ... .ftruncate(outputPath+\'.processed\', ...) fs. ... .ftruncateSync(outputPath+\'.processed\', ...) fs. ... .futimes(outputPath+\'.processed\', ...) fs. ... .futimesSync(outputPath+\'.processed\', ...) fs. ... .lchmod(outputPath+\'.processed\', ...) fs. ... .lchmodSync(outputPath+\'.processed\', ...) fs. ... .lchown(outputPath+\'.processed\', ...) fs. ... .lchownSync(outputPath+\'.processed\', ...) fs. ... .link(outputPath+\'.processed\', ...) fs. ... .link($SMTH, outputPath+\'.processed\', ...) fs. ... .linkSync(outputPath+\'.processed\', ...) fs. ... .linkSync($SMTH, outputPath+\'.processed\', ...) fs. ... .lstat(outputPath+\'.processed\', ...) fs. ... .lstatSync(outputPath+\'.processed\', ...) fs. ... .lutimes(outputPath+\'.processed\', ...) fs. ... .lutimesSync(outputPath+\'.processed\', ...) fs. ... .mkdir(outputPath+\'.processed\', ...) fs. ... .mkdirSync(outputPath+\'.processed\', ...) fs. ... .mkdtemp(outputPath+\'.processed\', ...) fs. ... .mkdtempSync(outputPath+\'.processed\', ...) fs. ... .open(outputPath+\'.processed\', ...) fs. ... .openSync(outputPath+\'.processed\', ...) fs. ... .opendir(outputPath+\'.processed\', ...) fs. ... .opendirSync(outputPath+\'.processed\', ...) fs. ... .read(outputPath+\'.processed\', ...) fs. ... .read(outputPath+\'.processed\', ...) fs. ... .readFile(outputPath+\'.processed\', ...) fs. ... .readFileSync(outputPath+\'.processed\', ...) fs. ... .readSync(outputPath+\'.processed\', ...) fs. ... .readSync(outputPath+\'.processed\', ...) fs. ... .readdir(outputPath+\'.processed\', ...) fs. ... .readdirSync(outputPath+\'.processed\', ...) fs. ... .readlink(outputPath+\'.processed\', ...) fs. ... .readlinkSync(outputPath+\'.processed\', ...) fs. ... .readv(outputPath+\'.processed\', ...) fs. ... .readvSync(outputPath+\'.processed\', ...) fs. ... .realpath(outputPath+\'.processed\', ...) fs. ... .realpath.native(outputPath+\'.processed\', ...) fs. ... .realpathSync.native(outputPath+\'.processed\', ...) fs. ... .realpathync(outputPath+\'.processed\', ...) fs. ... .rename(outputPath+\'.processed\', ...) fs. ... .rename($SMTH, outputPath+\'.processed\', ...) fs. ... .renameSync(outputPath+\'.processed\', ...) fs. ... .renameSync($SMTH, outputPath+\'.processed\', ...) fs. ... .rm(outputPath+\'.processed\', ...) fs. ... .rmSync(outputPath+\'.processed\', ...) fs. ... .rmdir(outputPath+\'.processed\', ...) fs. ... .rmdirSync(outputPath+\'.processed\', ...) fs. ... .stat(outputPath+\'.processed\', ...) fs. ... .statSync(outputPath+\'.processed\', ...) fs. ... .symlink(outputPath+\'.processed\', ...) fs. ... .symlink($SMTH, outputPath+\'.processed\', ...) fs. ... .symlinkSync(outputPath+\'.processed\', ...) fs. ... .symlinkSync($SMTH, outputPath+\'.processed\', ...) fs. ... .truncate(outputPath+\'.processed\', ...) fs. ... .truncateSync(outputPath+\'.processed\', ...) fs. ... .unlink(outputPath+\'.processed\', ...) fs. ... .unlinkSync(outputPath+\'.processed\', ...) fs. ... .unwatchFile(outputPath+\'.processed\', ...) fs. ... .utimes(outputPath+\'.processed\', ...) fs. ... .utimesSync(outputPath+\'.processed\', ...) fs. ... .watch(outputPath+\'.processed\', ...) fs. ... .watchFile(outputPath+\'.processed\', ...) fs. ... .write(outputPath+\'.processed\', ...) fs. ... .writeFile(outputPath+\'.processed\', ...) fs. ... .writeFileSync(outputPath+\'.processed\', ...) fs. ... .writeSync(outputPath+\'.processed\', ...) fs. ... .writev(outputPath+\'.processed\', ...) fs. ... .writevSync(outputPath+\'.processed\', ...) outputPath+\'.processed\' $METHOD("...", ...) access(outputPath+\'.processed\',...) accessSync(outputPath+\'.processed\', ...) appendFile(outputPath+\'.processed\',...) appendFileSync(outputPath+\'.processed\', ...) chmod(outputPath+\'.processed\',...) chmodSync(outputPath+\'.processed\', ...) chown(outputPath+\'.processed\',...) chownSync(outputPath+\'.processed\', ...) close(outputPath+\'.processed\',...) closeSync(outputPath+\'.processed\', ...) copyFile(outputPath+\'.processed\',...) copyFile($SMTH, outputPath+\'.processed\',...) copyFileSync(outputPath+\'.processed\', ...) copyFileSync($SMTH, outputPath+\'.processed\', ...) cp(outputPath+\'.processed\', ...) cp($SMTH, outputPath+\'.processed\', ...) cpSync(outputPath+\'.processed\', ...) cpSync($SMTH, outputPath+\'.processed\', ...) createReadStream(outputPath+\'.processed\',...) createWriteStream(outputPath+\'.processed\',...) exists(outputPath+\'.processed\', ...) existsSync(outputPath+\'.processed\', ...) fchmod(outputPath+\'.processed\', ...) fchmodSync(outputPath+\'.processed\', ...) fchown(outputPath+\'.processed\', ...) fchownSync(outputPath+\'.processed\', ...) fdatasync(outputPath+\'.processed\', ...) fdatasyncSync(outputPath+\'.processed\', ...) fstat(outputPath+\'.processed\', ...) fstatSync(outputPath+\'.processed\', ...) fsync(outputPath+\'.processed\', ...) fsyncSync(outputPath+\'.processed\', ...) ftruncate(outputPath+\'.processed\', ...) ftruncateSync(outputPath+\'.processed\', ...) futimes(outputPath+\'.processed\', ...) futimesSync(outputPath+\'.processed\', ...) lchmod(outputPath+\'.processed\', ...) lchmodSync(outputPath+\'.processed\', ...) lchown(outputPath+\'.processed\', ...) lchownSync(outputPath+\'.processed\', ...) link(outputPath+\'.processed\', ...) link($SMTH, outputPath+\'.processed\', ...) linkSync(outputPath+\'.processed\', ...) linkSync($SMTH, outputPath+\'.processed\', ...) lstat(outputPath+\'.processed\', ...) lstatSync(outputPath+\'.processed\', ...) lutimes(outputPath+\'.processed\', ...) lutimesSync(outputPath+\'.processed\', ...) mkdir(outputPath+\'.processed\', ...) mkdirSync(outputPath+\'.processed\', ...) mkdtemp(outputPath+\'.processed\', ...) mkdtempSync(outputPath+\'.processed\', ...) open(outputPath+\'.processed\', ...) openSync(outputPath+\'.processed\', ...) opendir(outputPath+\'.processed\', ...) opendirSync(outputPath+\'.processed\', ...) read(outputPath+\'.processed\', ...) read(outputPath+\'.processed\', ...) readFile(outputPath+\'.processed\', ...) readFileSync(outputPath+\'.processed\', ...) readSync(outputPath+\'.processed\', ...) readSync(outputPath+\'.processed\', ...) readdir(outputPath+\'.processed\', ...) readdirSync(outputPath+\'.processed\', ...) readlink(outputPath+\'.processed\', ...) readlinkSync(outputPath+\'.processed\', ...) readv(outputPath+\'.processed\', ...) readvSync(outputPath+\'.processed\', ...) realpath(outputPath+\'.processed\', ...) realpath.native(outputPath+\'.processed\', ...) realpathSync.native(outputPath+\'.processed\', ...) realpathync(outputPath+\'.processed\', ...) rename(outputPath+\'.processed\', ...) rename($SMTH, outputPath+\'.processed\', ...) renameSync(outputPath+\'.processed\', ...) renameSync($SMTH, outputPath+\'.processed\', ...) rm(outputPath+\'.processed\', ...) rmSync(outputPath+\'.processed\', ...) rmdir(outputPath+\'.processed\', ...) rmdirSync(outputPath+\'.processed\', ...) stat(outputPath+\'.processed\', ...) statSync(outputPath+\'.processed\', ...) symlink(outputPath+\'.processed\', ...) symlink($SMTH, outputPath+\'.processed\', ...) symlinkSync(outputPath+\'.processed\', ...) symlinkSync($SMTH, outputPath+\'.processed\', ...) truncate(outputPath+\'.processed\', ...) truncateSync(outputPath+\'.processed\', ...) unlink(outputPath+\'.processed\', ...) unlinkSync(outputPath+\'.processed\', ...) unwatchFile(outputPath+\'.processed\', ...) utimes(outputPath+\'.processed\', ...) utimesSync(outputPath+\'.processed\', ...) watch(outputPath+\'.processed\', ...) watchFile(outputPath+\'.processed\', ...) write(outputPath+\'.processed\', ...) writeFile(outputPath+\'.processed\', ...) writeFileSync(outputPath+\'.processed\', ...) writeSync(outputPath+\'.processed\', ...) writev(outputPath+\'.processed\', ...) writevSync(outputPath+\'.processed\', ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = be464f4b51fe75bf4dc34b961fa1b139b093ba885286c2e57a60ea59760c25d6c0170572003a0e10fae4664dcebeebe43daa4584f16c9cc7be0a84fe9077ae4d_0
2025-05-26 21:33:53,154 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 9a3550475865461ed1cc19dc0f6c68d1bf6fbc3d9bf0848d3baddb3a7da83fe5736884d7da124de93a34298798798b60a956d50547db20952f8f12b8b5f24095_0
2025-05-26 21:33:53,155 - semgrep.rule_match - DEBUG - match_key = ('filePath function ... (..., filePath,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile(outputPath+\'.processed\', filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync(outputPath+\'.processed\', filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp(outputPath+\'.processed\', filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync(outputPath+\'.processed\', filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link(outputPath+\'.processed\', filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync(outputPath+\'.processed\', filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename(outputPath+\'.processed\', filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync(outputPath+\'.processed\', filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink(outputPath+\'.processed\', filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync(outputPath+\'.processed\', filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile(outputPath+\'.processed\', filePath,...) copyFileSync(filePath, ...) copyFileSync(outputPath+\'.processed\', filePath, ...) cp(filePath, ...) cp(outputPath+\'.processed\', filePath, ...) cpSync(filePath, ...) cpSync(outputPath+\'.processed\', filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link(outputPath+\'.processed\', filePath, ...) linkSync(filePath, ...) linkSync(outputPath+\'.processed\', filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename(outputPath+\'.processed\', filePath, ...) renameSync(filePath, ...) renameSync(outputPath+\'.processed\', filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink(outputPath+\'.processed\', filePath, ...) symlinkSync(filePath, ...) symlinkSync(outputPath+\'.processed\', filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 1c68b6ffa0e45d4dd5c9a0d584d9e28a2ed000fae11ee74d7d56477d7328ea80d8110fa10ec56013d625631faf2a44111ff2735482442fec51ecc97e8dc14c12_0
2025-05-26 21:33:53,156 - semgrep.rule_match - DEBUG - match_key = ('filePath function ... (..., filePath,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile(outputPath+\'.processed\', filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync(outputPath+\'.processed\', filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp(outputPath+\'.processed\', filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync(outputPath+\'.processed\', filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link(outputPath+\'.processed\', filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync(outputPath+\'.processed\', filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename(outputPath+\'.processed\', filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync(outputPath+\'.processed\', filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink(outputPath+\'.processed\', filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync(outputPath+\'.processed\', filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile(outputPath+\'.processed\', filePath,...) copyFileSync(filePath, ...) copyFileSync(outputPath+\'.processed\', filePath, ...) cp(filePath, ...) cp(outputPath+\'.processed\', filePath, ...) cpSync(filePath, ...) cpSync(outputPath+\'.processed\', filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link(outputPath+\'.processed\', filePath, ...) linkSync(filePath, ...) linkSync(outputPath+\'.processed\', filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename(outputPath+\'.processed\', filePath, ...) renameSync(filePath, ...) renameSync(outputPath+\'.processed\', filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink(outputPath+\'.processed\', filePath, ...) symlinkSync(filePath, ...) symlinkSync(outputPath+\'.processed\', filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 1c68b6ffa0e45d4dd5c9a0d584d9e28a2ed000fae11ee74d7d56477d7328ea80d8110fa10ec56013d625631faf2a44111ff2735482442fec51ecc97e8dc14c12_0
2025-05-26 21:33:53,156 - semgrep.rule_match - DEBUG - match_key = ('filePath function ... (..., filePath,...) {...} filePath fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(filePath,...) fs. ... .accessSync(filePath, ...) fs. ... .appendFile(filePath,...) fs. ... .appendFileSync(filePath, ...) fs. ... .chmod(filePath,...) fs. ... .chmodSync(filePath, ...) fs. ... .chown(filePath,...) fs. ... .chownSync(filePath, ...) fs. ... .close(filePath,...) fs. ... .closeSync(filePath, ...) fs. ... .copyFile(filePath,...) fs. ... .copyFile(outputPath+\'.processed\', filePath,...) fs. ... .copyFileSync(filePath, ...) fs. ... .copyFileSync(outputPath+\'.processed\', filePath, ...) fs. ... .cp(filePath, ...) fs. ... .cp(outputPath+\'.processed\', filePath, ...) fs. ... .cpSync(filePath, ...) fs. ... .cpSync(outputPath+\'.processed\', filePath, ...) fs. ... .createReadStream(filePath,...) fs. ... .createWriteStream(filePath,...) fs. ... .exists(filePath, ...) fs. ... .existsSync(filePath, ...) fs. ... .fchmod(filePath, ...) fs. ... .fchmodSync(filePath, ...) fs. ... .fchown(filePath, ...) fs. ... .fchownSync(filePath, ...) fs. ... .fdatasync(filePath, ...) fs. ... .fdatasyncSync(filePath, ...) fs. ... .fstat(filePath, ...) fs. ... .fstatSync(filePath, ...) fs. ... .fsync(filePath, ...) fs. ... .fsyncSync(filePath, ...) fs. ... .ftruncate(filePath, ...) fs. ... .ftruncateSync(filePath, ...) fs. ... .futimes(filePath, ...) fs. ... .futimesSync(filePath, ...) fs. ... .lchmod(filePath, ...) fs. ... .lchmodSync(filePath, ...) fs. ... .lchown(filePath, ...) fs. ... .lchownSync(filePath, ...) fs. ... .link(filePath, ...) fs. ... .link(outputPath+\'.processed\', filePath, ...) fs. ... .linkSync(filePath, ...) fs. ... .linkSync(outputPath+\'.processed\', filePath, ...) fs. ... .lstat(filePath, ...) fs. ... .lstatSync(filePath, ...) fs. ... .lutimes(filePath, ...) fs. ... .lutimesSync(filePath, ...) fs. ... .mkdir(filePath, ...) fs. ... .mkdirSync(filePath, ...) fs. ... .mkdtemp(filePath, ...) fs. ... .mkdtempSync(filePath, ...) fs. ... .open(filePath, ...) fs. ... .openSync(filePath, ...) fs. ... .opendir(filePath, ...) fs. ... .opendirSync(filePath, ...) fs. ... .read(filePath, ...) fs. ... .read(filePath, ...) fs. ... .readFile(filePath, ...) fs. ... .readFileSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readSync(filePath, ...) fs. ... .readdir(filePath, ...) fs. ... .readdirSync(filePath, ...) fs. ... .readlink(filePath, ...) fs. ... .readlinkSync(filePath, ...) fs. ... .readv(filePath, ...) fs. ... .readvSync(filePath, ...) fs. ... .realpath(filePath, ...) fs. ... .realpath.native(filePath, ...) fs. ... .realpathSync.native(filePath, ...) fs. ... .realpathync(filePath, ...) fs. ... .rename(filePath, ...) fs. ... .rename(outputPath+\'.processed\', filePath, ...) fs. ... .renameSync(filePath, ...) fs. ... .renameSync(outputPath+\'.processed\', filePath, ...) fs. ... .rm(filePath, ...) fs. ... .rmSync(filePath, ...) fs. ... .rmdir(filePath, ...) fs. ... .rmdirSync(filePath, ...) fs. ... .stat(filePath, ...) fs. ... .statSync(filePath, ...) fs. ... .symlink(filePath, ...) fs. ... .symlink(outputPath+\'.processed\', filePath, ...) fs. ... .symlinkSync(filePath, ...) fs. ... .symlinkSync(outputPath+\'.processed\', filePath, ...) fs. ... .truncate(filePath, ...) fs. ... .truncateSync(filePath, ...) fs. ... .unlink(filePath, ...) fs. ... .unlinkSync(filePath, ...) fs. ... .unwatchFile(filePath, ...) fs. ... .utimes(filePath, ...) fs. ... .utimesSync(filePath, ...) fs. ... .watch(filePath, ...) fs. ... .watchFile(filePath, ...) fs. ... .write(filePath, ...) fs. ... .writeFile(filePath, ...) fs. ... .writeFileSync(filePath, ...) fs. ... .writeSync(filePath, ...) fs. ... .writev(filePath, ...) fs. ... .writevSync(filePath, ...) filePath $METHOD("...", ...) access(filePath,...) accessSync(filePath, ...) appendFile(filePath,...) appendFileSync(filePath, ...) chmod(filePath,...) chmodSync(filePath, ...) chown(filePath,...) chownSync(filePath, ...) close(filePath,...) closeSync(filePath, ...) copyFile(filePath,...) copyFile(outputPath+\'.processed\', filePath,...) copyFileSync(filePath, ...) copyFileSync(outputPath+\'.processed\', filePath, ...) cp(filePath, ...) cp(outputPath+\'.processed\', filePath, ...) cpSync(filePath, ...) cpSync(outputPath+\'.processed\', filePath, ...) createReadStream(filePath,...) createWriteStream(filePath,...) exists(filePath, ...) existsSync(filePath, ...) fchmod(filePath, ...) fchmodSync(filePath, ...) fchown(filePath, ...) fchownSync(filePath, ...) fdatasync(filePath, ...) fdatasyncSync(filePath, ...) fstat(filePath, ...) fstatSync(filePath, ...) fsync(filePath, ...) fsyncSync(filePath, ...) ftruncate(filePath, ...) ftruncateSync(filePath, ...) futimes(filePath, ...) futimesSync(filePath, ...) lchmod(filePath, ...) lchmodSync(filePath, ...) lchown(filePath, ...) lchownSync(filePath, ...) link(filePath, ...) link(outputPath+\'.processed\', filePath, ...) linkSync(filePath, ...) linkSync(outputPath+\'.processed\', filePath, ...) lstat(filePath, ...) lstatSync(filePath, ...) lutimes(filePath, ...) lutimesSync(filePath, ...) mkdir(filePath, ...) mkdirSync(filePath, ...) mkdtemp(filePath, ...) mkdtempSync(filePath, ...) open(filePath, ...) openSync(filePath, ...) opendir(filePath, ...) opendirSync(filePath, ...) read(filePath, ...) read(filePath, ...) readFile(filePath, ...) readFileSync(filePath, ...) readSync(filePath, ...) readSync(filePath, ...) readdir(filePath, ...) readdirSync(filePath, ...) readlink(filePath, ...) readlinkSync(filePath, ...) readv(filePath, ...) readvSync(filePath, ...) realpath(filePath, ...) realpath.native(filePath, ...) realpathSync.native(filePath, ...) realpathync(filePath, ...) rename(filePath, ...) rename(outputPath+\'.processed\', filePath, ...) renameSync(filePath, ...) renameSync(outputPath+\'.processed\', filePath, ...) rm(filePath, ...) rmSync(filePath, ...) rmdir(filePath, ...) rmdirSync(filePath, ...) stat(filePath, ...) statSync(filePath, ...) symlink(filePath, ...) symlink(outputPath+\'.processed\', filePath, ...) symlinkSync(filePath, ...) symlinkSync(outputPath+\'.processed\', filePath, ...) truncate(filePath, ...) truncateSync(filePath, ...) unlink(filePath, ...) unlinkSync(filePath, ...) unwatchFile(filePath, ...) utimes(filePath, ...) utimesSync(filePath, ...) watch(filePath, ...) watchFile(filePath, ...) write(filePath, ...) writeFile(filePath, ...) writeFileSync(filePath, ...) writeSync(filePath, ...) writev(filePath, ...) writevSync(filePath, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/uploads.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 1c68b6ffa0e45d4dd5c9a0d584d9e28a2ed000fae11ee74d7d56477d7328ea80d8110fa10ec56013d625631faf2a44111ff2735482442fec51ecc97e8dc14c12_0
2025-05-26 21:33:53,159 - semgrep.core_runner - DEBUG - semgrep ran in 0:00:35.396176 on 120 files
2025-05-26 21:33:53,160 - semgrep.core_runner - DEBUG - findings summary: 5 warning, 3 error, 0 info
2025-05-26 21:33:53,163 - semgrep.app.auth - DEBUG - Getting API token from settings file
2025-05-26 21:33:53,163 - semgrep.app.auth - DEBUG - No API token found in settings file
2025-05-26 21:33:53,164 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEIuf0ZHK/semgrep/bin/semgrep-core-proprietary'.
2025-05-26 21:33:53,292 - semgrep.output - VERBOSE - 
========================================
Files skipped:
========================================

  Always skipped by Opengrep:

   • <none>

  Skipped by .gitignore:
  (Disable by passing --no-git-ignore)

   • <all files not listed by `git ls-files` were skipped>

  Skipped by .semgrepignore:
  - https://semgrep.dev/docs/ignoring-files-folders-code/#understand-semgrep-defaults

   • <none>

  Skipped by --include patterns:

   • <none>

  Skipped by --exclude patterns:

   • <none>

  Files skipped due to insufficient read permissions:

   • <none>

  Skipped by limiting to files smaller than 1000000 bytes:
  (Adjust with the --max-target-bytes flag)

   • <none>

  Partially analyzed due to parsing or internal Opengrep errors

   • client/index.html (1 lines skipped)
   • tailwind.config.ts (1 lines skipped)

2025-05-26 21:33:53,293 - semgrep.output - INFO - Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.
  Partially scanned: 2 files only partially analyzed due to parsing or internal Opengrep errors

Ran 435 rules on 120 files: 8 findings.
2025-05-26 21:33:53,294 - semgrep.app.version - DEBUG - Version cache does not exist
2025-05-26 21:33:53,311 - semgrep.metrics - VERBOSE - Not sending pseudonymous metrics since metrics are configured to OFF and registry usage is False
